{{- if .Values.pgpool.enabled }}
{{- $affinity := merge .Values.pgpool.affinity .Values.common.affinity -}}
{{- $annotations := merge .Values.pgpool.annotations .Values.common.annotations -}}
{{- $containerSecurityContext := merge .Values.pgpool.containerSecurityContext .Values.common.containerSecurityContext -}}
{{- $containers := concat .Values.common.containers .Values.pgpool.containers -}}
{{- $dnsConfig := merge .Values.pgpool.dnsConfig .Values.common.dnsConfig -}}
{{- $dnsPolicy := default .Values.common.dnsPolicy .Values.pgpool.dnsPolicy -}}
{{- $env := concat .Values.common.env .Values.pgpool.env -}}
{{- $envFrom := concat .Values.common.envFrom .Values.pgpool.envFrom -}}
{{- $ephemeralContainers := concat .Values.common.ephemeralContainers .Values.pgpool.ephemeralContainers -}}
{{- $hostAliases := concat .Values.common.hostAliases .Values.pgpool.hostAliases -}}
{{- $imagePullSecrets := concat .Values.common.imagePullSecrets .Values.pgpool.imagePullSecrets -}}
{{- $initContainers := concat .Values.common.initContainers .Values.pgpool.initContainers -}}
{{- $labels := merge .Values.pgpool.labels .Values.common.labels -}}
{{- $nodeName := default .Values.common.nodeName .Values.pgpool.nodeName -}}
{{- $nodeSelector := merge .Values.pgpool.nodeSelector .Values.common.nodeSelector -}}
{{- $os := merge .Values.pgpool.os .Values.common.os -}}
{{- $podAnnotations := merge .Values.pgpool.podAnnotations .Values.common.podAnnotations -}}
{{- $preemptionPolicy := default .Values.common.preemptionPolicy .Values.pgpool.preemptionPolicy -}}
{{- $priorityClassName := default .Values.common.priorityClassName .Values.pgpool.priorityClassName -}}
{{- $readinessGates := concat .Values.common.readinessGates .Values.pgpool.readinessGates -}}
{{- $resourceClaims := concat .Values.common.resourceClaims .Values.pgpool.resourceClaims -}}
{{- $runtimeClassName := default .Values.common.runtimeClassName .Values.pgpool.runtimeClassName -}}
{{- $schedulerName := default .Values.common.schedulerName .Values.pgpool.schedulerName -}}
{{- $schedulingGates := concat .Values.common.schedulingGates .Values.pgpool.schedulingGates -}}
{{- $securityContext := merge .Values.pgpool.securityContext .Values.common.securityContext -}}
{{- $subdomain := default .Values.common.subdomain .Values.pgpool.subdomain -}}
{{- $terminationMessagePath := default .Values.common.terminationMessagePath .Values.pgpool.terminationMessagePath -}}
{{- $terminationMessagePolicy := default .Values.common.terminationMessagePolicy .Values.pgpool.terminationMessagePolicy -}}
{{- $tolerations := merge .Values.pgpool.tolerations .Values.common.tolerations -}}
{{- $topologySpreadConstraints := merge .Values.pgpool.topologySpreadConstraints .Values.common.topologySpreadConstraints -}}
{{- $volumeDevices := concat .Values.common.volumeDevices .Values.pgpool.volumeDevices -}}
{{- $volumeMounts := concat .Values.common.volumeMounts .Values.pgpool.volumeMounts -}}
{{- $volumes := concat .Values.common.volumes .Values.pgpool.volumes -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  {{- with $annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  labels:
    {{- include "simpaas-postgresql.labels" . | nindent 4 }}
    {{- with $labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  name: {{ include "simpaas-postgresql.pgpool.name" . }}
spec:
  {{- if .Values.pgpool.minReadySeconds }}
  minReadySeconds: {{ .Values.pgpool.minReadySeconds }}
  {{- end }}
  {{- if not (eq nil .Values.pgpool.paused) }}
  automountServiceAccountToken: {{ .Values.pgpool.paused }}
  {{- end }}
  {{- if .Values.pgpool.progressDeadlineSeconds }}
  progressDeadlineSeconds: {{ .Values.pgpool.progressDeadlineSeconds }}
  {{- end }}
  replicas: {{ .Values.pgpool.replicas }}
  {{- if not (eq nil .Values.pgpool.revisionHistoryLimit) }}
  revisionHistoryLimit: {{ .Values.pgpool.revisionHistoryLimit }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "simpaas-postgresql.pgpool.podLabels" . | nindent 6 }}
  {{- with .Values.pgpool.strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  template:
    metadata:
      {{- with $podAnnotations }}
      annotations:
        {{- toYaml $podAnnotations | nindent 8 }}
      {{- end }}
      labels:
        {{- include "simpaas-postgresql.pgpool.podLabels" . | nindent 8 }}
    spec:
      {{- if .Values.pgpool.activeDeadlineSeconds }}
      activeDeadlineSeconds: {{ .Values.pgpool.activeDeadlineSeconds }}
      {{- end }}
      {{- with $affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if not (eq nil .Values.pgpool.automountServiceAccountToken) }}
      automountServiceAccountToken: {{ .Values.pgpool.automountServiceAccountToken }}
      {{- end }}
      containers:
        - {{- with .Values.pgpool.args }}
          args:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.pgpool.command }}
          command:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: PGPOOL_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "simpaas-postgresql.secret.name" . }}
                  key: {{ .Values.secret.pgpoolAdminPasswordKey }}
            - name: PGPOOL_ADMIN_USERNAME
              value: {{ .Values.pgpool.adminUser }}
            - name: PGPOOL_BACKEND_NODES
              value: {{ include "simpaas-postgresql.postgresql.hosts" . }}
            - name: PGPOOL_POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "simpaas-postgresql.secret.name" . }}
                  key: {{ .Values.secret.postgresPasswordKey }}
            - name: PGPOOL_POSTGRES_USERNAME
              value: {{ .Values.postgresql.postgresUser }}
            - name: PGPOOL_SR_CHECK_DATABASE
              value: {{ .Values.postgresql.repmgrDatabase }}
            - name: PGPOOL_SR_CHECK_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "simpaas-postgresql.secret.name" . }}
                  key: {{ .Values.secret.repmgrPasswordKey }}
            - name: PGPOOL_SR_CHECK_USER
              value: {{ .Values.postgresql.repmgrUser }}
            {{- with $env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with $envFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: {{ include "utils.image" (dict "common" .Values.common.image "image" .Values.pgpool.image) }}
          imagePullPolicy: {{ default .Values.common.imagePullPolicy .Values.pgpool.imagePullPolicy }}
          {{- with .Values.pgpool.lifecycle }}
          lifecycle:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.pgpool.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          name: pgpool
          ports:
            - containerPort: {{ .Values.pgpool.service.port }}
              name: pgpool
          {{- with .Values.pgpool.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.pgpool.resizePolicy }}
          resizePolicy:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.pgpool.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $containerSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.pgpool.startupProbe }}
          startupProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if not (eq nil .Values.pgpool.stdin) }}
          stdin: {{ .Values.pgpool.stdin }}
          {{- end }}
          {{- if not (eq nil .Values.pgpool.stdinOnce) }}
          stdinOnce: {{ .Values.pgpool.stdinOnce }}
          {{- end }}
          {{- if $terminationMessagePath }}
          terminationMessagePath: {{ $terminationMessagePath }}
          {{- end }}
          {{- if $terminationMessagePolicy }}
          terminationMessagePolicy: {{ $terminationMessagePolicy }}
          {{- end }}
          {{- if not (eq nil .Values.pgpool.tty) }}
          tty: {{ .Values.pgpool.tty }}
          {{- end }}
          {{- with $volumeDevices }}
          volumeDevices:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: empty-dir
              mountPath: /opt/bitnami/pgpool/conf
              subPath: opt/bitnami/pgpool/conf
            - name: empty-dir
              mountPath: /opt/bitnami/pgpool/etc
              subPath: opt/bitnami/pgpool/etc
            - name: empty-dir
              mountPath: /opt/bitnami/pgpool/logs
              subPath: opt/bitnami/pgpool/logs
            - name: empty-dir
              mountPath: /opt/bitnami/pgpool/tmp
              subPath: opt/bitnami/pgpool/tmp
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp
            {{- with $volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- if .Values.pgpool.workingDir }}
          workingDir: {{ .Values.pgpool.workingDir }}
          {{- end }}
        {{- with $containers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with $dnsConfig }}
      dnsConfig:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $dnsPolicy }}
      dnsPolicy: {{ $dnsPolicy }}
      {{- end }}
      {{- if not (eq nil .Values.pgpool.enableServiceLinks) }}
      enableServiceLinks: {{ .Values.pgpool.enableServiceLinks }}
      {{- end }}
      {{- with $ephemeralContainers }}
      ephemeralContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $hostAliases }}
      hostAliases:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if not (eq nil .Values.pgpool.hostIPC) }}
      hostIPC: {{ .Values.pgpool.hostIPC }}
      {{- end }}
      {{- if not (eq nil .Values.pgpool.hostNetwork) }}
      hostNetwork: {{ .Values.pgpool.hostNetwork }}
      {{- end }}
      {{- if not (eq nil .Values.pgpool.hostPID) }}
      hostPID: {{ .Values.pgpool.hostPID }}
      {{- end }}
      {{- if not (eq nil .Values.pgpool.hostUsers) }}
      hostUsers: {{ .Values.pgpool.hostUsers }}
      {{- end }}
      {{- if .Values.pgpool.hostname }}
      hostname: {{ .Values.pgpool.hostname }}
      {{- end }}
      {{- with $imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $nodeName }}
      nodeName: {{ $nodeName }}
      {{- end }}
      {{- with $nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $os }}
      os:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $preemptionPolicy }}
      preemptionPolicy: {{ $preemptionPolicy }}
      {{- end }}
      {{- if not (eq nil .Values.pgpool.priority) }}
      priority: {{ .Values.pgpool.priority }}
      {{- end }}
      {{- if $priorityClassName }}
      priorityClassName: {{ $priorityClassName }}
      {{- end }}
      {{- with $readinessGates }}
      readinessGates:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $resourceClaims }}
      resourceClaims:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.pgpool.restartPolicy }}
      restartPolicy: {{ .Values.pgpool.restartPolicy }}
      {{- end }}
      {{- if $runtimeClassName }}
      runtimeClassName: {{ $runtimeClassName }}
      {{- end }}
      {{- if $schedulerName }}
      schedulerName: {{ $schedulerName }}
      {{- end }}
      {{- with $schedulingGates }}
      schedulingGates:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "simpaas-postgresql.serviceAccount.name" . }}
      {{- if not (eq nil .Values.pgpool.setHostnameAsFQDN) }}
      setHostnameAsFQDN: {{ .Values.pgpool.setHostnameAsFQDN }}
      {{- end }}
      {{- if not (eq nil .Values.pgpool.shareProcessNamespace) }}
      shareProcessNamespace: {{ .Values.pgpool.shareProcessNamespace }}
      {{- end }}
      {{- if $subdomain }}
      subdomain: {{ $subdomain }}
      {{- end }}
      {{- if not (eq nil .Values.pgpool.terminationGracePeriodSeconds) }}
      terminationGracePeriodSeconds: {{ .Values.pgpool.terminationGracePeriodSeconds }}
      {{- end }}
      {{- with $tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: empty-dir
          emptyDir: {}
        {{- with $volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
{{- end }}
