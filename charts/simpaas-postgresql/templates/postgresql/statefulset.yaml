{{- $affinity := merge .Values.postgresql.affinity .Values.common.affinity -}}
{{- $annotations := merge .Values.postgresql.annotations .Values.common.annotations -}}
{{- $containerSecurityContext := merge .Values.postgresql.containerSecurityContext .Values.common.containerSecurityContext -}}
{{- $containers := concat .Values.common.containers .Values.postgresql.containers -}}
{{- $dnsConfig := merge .Values.postgresql.dnsConfig .Values.common.dnsConfig -}}
{{- $dnsPolicy := default .Values.common.dnsPolicy .Values.postgresql.dnsPolicy -}}
{{- $ephemeralContainers := concat .Values.common.ephemeralContainers .Values.postgresql.ephemeralContainers -}}
{{- $env := concat .Values.common.env .Values.postgresql.env -}}
{{- $envFrom := concat .Values.common.envFrom .Values.postgresql.envFrom -}}
{{- $hostAliases := concat .Values.common.hostAliases .Values.postgresql.hostAliases -}}
{{- $imagePullSecrets := concat .Values.common.imagePullSecrets .Values.postgresql.imagePullSecrets -}}
{{- $initContainers := concat .Values.common.initContainers .Values.postgresql.initContainers -}}
{{- $labels := merge .Values.postgresql.labels .Values.common.labels -}}
{{- $nodeName := default .Values.common.nodeName .Values.postgresql.nodeName -}}
{{- $nodeSelector := merge .Values.postgresql.nodeSelector .Values.common.nodeSelector -}}
{{- $os := merge .Values.postgresql.os .Values.common.os -}}
{{- $podAnnotations := merge .Values.postgresql.podAnnotations .Values.common.podAnnotations -}}
{{- $persistenceAnnotations := merge .Values.postgresql.persistence.annotations .Values.common.persistence.annotations -}}
{{- $persistenceLabels := merge .Values.postgresql.persistence.labels .Values.common.persistence.labels -}}
{{- $preemptionPolicy := default .Values.common.preemptionPolicy .Values.postgresql.preemptionPolicy -}}
{{- $priorityClassName := default .Values.common.priorityClassName .Values.postgresql.priorityClassName -}}
{{- $readinessGates := concat .Values.common.readinessGates .Values.postgresql.readinessGates -}}
{{- $resourceClaims := concat .Values.common.resourceClaims .Values.postgresql.resourceClaims -}}
{{- $runtimeClassName := default .Values.common.runtimeClassName .Values.postgresql.runtimeClassName -}}
{{- $schedulerName := default .Values.common.schedulerName .Values.postgresql.schedulerName -}}
{{- $schedulingGates := concat .Values.common.schedulingGates .Values.postgresql.schedulingGates -}}
{{- $securityContext := merge .Values.postgresql.securityContext .Values.common.securityContext -}}
{{- $storageClassName := default .Values.common.persistence.storageClassName .Values.postgresql.persistence.storageClassName }}
{{- $subdomain := default .Values.common.subdomain .Values.postgresql.subdomain -}}
{{- $terminationMessagePath := default .Values.common.terminationMessagePath .Values.postgresql.terminationMessagePath -}}
{{- $terminationMessagePolicy := default .Values.common.terminationMessagePolicy .Values.postgresql.terminationMessagePolicy -}}
{{- $tolerations := merge .Values.postgresql.tolerations .Values.common.tolerations -}}
{{- $topologySpreadConstraints := merge .Values.postgresql.topologySpreadConstraints .Values.common.topologySpreadConstraints -}}
{{- $volumeDevices := concat .Values.common.volumeDevices .Values.postgresql.volumeDevices -}}
{{- $volumeMounts := concat .Values.common.volumeMounts .Values.postgresql.volumeMounts -}}
{{- $volumes := concat .Values.common.volumes .Values.postgresql.volumes -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  {{- with $annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  labels:
    {{- include "simpaas-postgresql.labels" . | nindent 4 }}
    {{- with $labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  name: {{ include "simpaas-postgresql.postgresql.name" . }}
spec:
  {{- if .Values.postgresql.minReadySeconds }}
  minReadySeconds: {{ .Values.postgresql.minReadySeconds }}
  {{- end }}
  {{- with .Values.postgresql.ordinals }}
  ordinals:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.postgresql.persistentVolumeClaimRetentionPolicy }}
  persistentVolumeClaimRetentionPolicy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- if .Values.postgresql.podManagementPolicy }}
  podManagementPolicy: {{ .Values.postgresql.podManagementPolicy }}
  {{- end }}
  replicas: {{ .Values.postgresql.replicas }}
  {{- if not (eq nil .Values.postgresql.revisionHistoryLimit) }}
  revisionHistoryLimit: {{ .Values.postgresql.revisionHistoryLimit }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "simpaas-postgresql.postgresql.podLabels" . | nindent 6 }}
  serviceName: {{ include "simpaas-postgresql.postgresql.service.headlessName" . }}
  template:
    metadata:
      {{- with $podAnnotations }}
      annotations:
        {{- toYaml $podAnnotations | nindent 8 }}
      {{- end }}
      labels:
        {{- include "simpaas-postgresql.postgresql.podLabels" . | nindent 8 }}
    spec:
      {{- if .Values.postgresql.activeDeadlineSeconds }}
      activeDeadlineSeconds: {{ .Values.postgresql.activeDeadlineSeconds }}
      {{- end }}
      {{- with $affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if not (eq nil .Values.postgresql.automountServiceAccountToken) }}
      automountServiceAccountToken: {{ .Values.postgresql.automountServiceAccountToken }}
      {{- end }}
      containers:
        - {{- with .Values.postgresql.args }}
          args:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.postgresql.command }}
          command:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: PGDATA
              value: {{ printf "%s/data" .Values.postgresql.persistence.mountPath }}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.postgresDatabase }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "simpaas-postgresql.secret.name" . }}
                  key: {{ .Values.secret.postgresPasswordKey }}
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.postgresUser }}
            - name: POSTGRESQL_PORT_NUMBER
              value: {{ .Values.postgresql.service.port | quote }}
            - name: POSTGRESQL_VOLUME_DIR
              value: {{ .Values.postgresql.persistence.mountPath }}
            - name: REPMGR_DATABASE
              value: {{ .Values.postgresql.repmgrDatabase }}
            - name: REPMGR_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: REPMGR_PARTNER_NODES
              value: {{ include "simpaas-postgresql.postgresql.hosts" . }}
            - name: REPMGR_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "simpaas-postgresql.secret.name" . }}
                  key: {{ .Values.secret.repmgrPasswordKey }}
            - name: REPMGR_PORT_NUMBER
              value: {{ .Values.postgresql.service.port | quote }}
            - name: REPMGR_PRIMARY_HOST
              value: {{ include "simpaas-postgresql.postgresql.subdomain" (dict "Release" .Release "Values" .Values "index" 0) }}
            - name: REPMGR_PRIMARY_PORT
              value: {{ .Values.postgresql.service.port | quote }}
            - name: REPMGR_USERNAME
              value: {{ .Values.postgresql.repmgrUser }}
            - name: REPMGR_NODE_NAME
              value: $(POD_NAME)
            - name: REPMGR_NODE_NETWORK_NAME
              value: $(POD_NAME).{{ include "simpaas-postgresql.postgresql.domain" . }}
            {{- with $env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with $envFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: {{ include "utils.image" (dict "common" .Values.common.image "image" .Values.postgresql.image) }}
          imagePullPolicy: {{ default .Values.common.imagePullPolicy .Values.postgresql.imagePullPolicy }}
          {{- with .Values.postgresql.lifecycle }}
          lifecycle:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.postgresql.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          name: postgresql
          ports:
            - containerPort: {{ .Values.postgresql.service.port }}
              name: postgresql
          {{- with .Values.postgresql.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.postgresql.resizePolicy }}
          resizePolicy:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.postgresql.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $containerSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.postgresql.startupProbe }}
          startupProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if not (eq nil .Values.postgresql.stdin) }}
          stdin: {{ .Values.postgresql.stdin }}
          {{- end }}
          {{- if not (eq nil .Values.postgresql.stdinOnce) }}
          stdinOnce: {{ .Values.postgresql.stdinOnce }}
          {{- end }}
          {{- if $terminationMessagePath }}
          terminationMessagePath: {{ $terminationMessagePath }}
          {{- end }}
          {{- if $terminationMessagePolicy }}
          terminationMessagePolicy: {{ $terminationMessagePolicy }}
          {{- end }}
          {{- if not (eq nil .Values.postgresql.tty) }}
          tty: {{ .Values.postgresql.tty }}
          {{- end }}
          {{- with $volumeDevices }}
          volumeDevices:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: {{ .Values.postgresql.persistence.mountPath }}
              name: {{ .Values.postgresql.persistence.name }}
            - mountPath: /opt/bitnami/postgresql/conf
              name: empty-dir
              subPath: opt/bitnami/postgresql/conf
            - mountPath: /opt/bitnami/postgresql/tmp
              name: empty-dir
              subPath: opt/bitnami/postgresql/tmp
            - mountPath: /opt/bitnami/repmgr/conf
              name: empty-dir
              subPath: opt/bitnami/repmgr/conf
            - mountPath: /opt/bitnami/repmgr/logs
              name: empty-dir
              subPath: opt/bitnami/repmgr/logs
            - mountPath: /opt/bitnami/repmgr/tmp
              name: empty-dir
              subPath: opt/bitnami/repmgr/tmp
            - mountPath: /tmp
              name: empty-dir
              subPath: tmp
            {{- if .Values.postgresql.hooksConfigMap.create }}
            - mountPath: /pre-stop.sh
              name: hooks
              subPath: pre-stop.sh
            - mountPath: /readiness-probe.sh
              name: hooks
              subPath: readiness-probe.sh
            {{- end }}
            {{- with $volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- if .Values.postgresql.workingDir }}
          workingDir: {{ .Values.postgresql.workingDir }}
          {{- end }}
        {{- with $containers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with $dnsConfig }}
      dnsConfig:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $dnsPolicy }}
      dnsPolicy: {{ $dnsPolicy }}
      {{- end }}
      {{- if not (eq nil .Values.postgresql.enableServiceLinks) }}
      enableServiceLinks: {{ .Values.postgresql.enableServiceLinks }}
      {{- end }}
      {{- with $ephemeralContainers }}
      ephemeralContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $hostAliases }}
      hostAliases:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if not (eq nil .Values.postgresql.hostIPC) }}
      hostIPC: {{ .Values.postgresql.hostIPC }}
      {{- end }}
      {{- if not (eq nil .Values.postgresql.hostNetwork) }}
      hostNetwork: {{ .Values.postgresql.hostNetwork }}
      {{- end }}
      {{- if not (eq nil .Values.postgresql.hostPID) }}
      hostPID: {{ .Values.postgresql.hostPID }}
      {{- end }}
      {{- if not (eq nil .Values.postgresql.hostUsers) }}
      hostUsers: {{ .Values.postgresql.hostUsers }}
      {{- end }}
      {{- if .Values.postgresql.hostname }}
      hostname: {{ .Values.postgresql.hostname }}
      {{- end }}
      {{- with $imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $nodeName }}
      nodeName: {{ $nodeName }}
      {{- end }}
      {{- with $nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $os }}
      os:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $preemptionPolicy }}
      preemptionPolicy: {{ $preemptionPolicy }}
      {{- end }}
      {{- if not (eq nil .Values.postgresql.priority) }}
      priority: {{ .Values.postgresql.priority }}
      {{- end }}
      {{- if $priorityClassName }}
      priorityClassName: {{ $priorityClassName }}
      {{- end }}
      {{- with $readinessGates }}
      readinessGates:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $resourceClaims }}
      resourceClaims:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.postgresql.restartPolicy }}
      restartPolicy: {{ .Values.postgresql.restartPolicy }}
      {{- end }}
      {{- if $runtimeClassName }}
      runtimeClassName: {{ $runtimeClassName }}
      {{- end }}
      {{- if $schedulerName }}
      schedulerName: {{ $schedulerName }}
      {{- end }}
      {{- with $schedulingGates }}
      schedulingGates:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "simpaas-postgresql.serviceAccount.name" . }}
      {{- if not (eq nil .Values.postgresql.setHostnameAsFQDN) }}
      setHostnameAsFQDN: {{ .Values.postgresql.setHostnameAsFQDN }}
      {{- end }}
      {{- if not (eq nil .Values.postgresql.shareProcessNamespace) }}
      shareProcessNamespace: {{ .Values.postgresql.shareProcessNamespace }}
      {{- end }}
      {{- if $subdomain }}
      subdomain: {{ $subdomain }}
      {{- end }}
      {{- if not (eq nil .Values.postgresql.terminationGracePeriodSeconds) }}
      terminationGracePeriodSeconds: {{ .Values.postgresql.terminationGracePeriodSeconds }}
      {{- end }}
      {{- with $tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        {{- if not .Values.postgresql.persistence.enabled }}
        - name: data
          emptyDir: {}
        {{- end }}
        - name: empty-dir
          emptyDir: {}
        {{- if .Values.postgresql.hooksConfigMap.create }}
        - name: hooks
          configMap:
            name: {{ include "simpaas-postgresql.postgresql.hooksConfigMap.name" . }}
            defaultMode: 0755
        {{- end }}
        {{- with $volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
  {{- with .Values.postgresql.updateStrategy }}
  updateStrategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- if .Values.postgresql.persistence.enabled }}
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        {{- with $persistenceAnnotations }}
        annotations:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with $persistenceLabels }}
        annotations:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        name: {{ .Values.postgresql.persistence.name }}
      spec:
        accessModes:
          {{- toYaml .Values.postgresql.persistence.accessModes | nindent 10 }}
        {{- with .Values.postgresql.persistence.dataSource }}
        dataSource:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.postgresql.persistence.dataSourceRef }}
        dataSourceRef:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.postgresql.persistence.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.postgresql.persistence.selector }}
        selector:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- if $storageClassName }}
        storageClassName: {{ $storageClassName }}
        {{- end }}
        {{- if .Values.postgresql.persistence.volumeAttributesClassName }}
        volumeAttributesClassName: {{ .Values.postgresql.persistence.volumeAttributesClassName }}
        {{- end }}
        {{- if .Values.postgresql.persistence.volumeMode }}
        volumeMode: {{ .Values.postgresql.persistence.volumeMode }}
        {{- end }}
        {{- if .Values.postgresql.persistence.volumeName }}
        volumeName: {{ .Values.postgresql.persistence.volumeName }}
        {{- end }}
    {{- end }}
